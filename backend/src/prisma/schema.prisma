generator client {
    provider = "prisma-client-js"
    previewFeatures = ["fullTextSearchPostgres"]
}

datasource db {
    provider = "postgresql"
    url = env("DATABASE_URL")
}

model Book {
    id String @id @default(uuid())
    isbn String @unique
    serialNumber Int @unique @default(autoincrement())
    book String
    author String
    description String
    createdAt DateTime @default(now())
    // reviews Review[]
    bookLikes BookLike[]
}

model User {
    id String @id @default(uuid())
    username String @unique
    email String @unique
    password String
    displayedName String @default("")
    avatar String?
    createdAt DateTime @default(now())
    reviews Review[]
    reviewsLikes ReviewLike[]
    permissions Permission[]
    booksLikes BookLike[]
    bookmarks Bookmark[]
    booksread BookRead[]
    library Library[]
}

enum Permission {
    BLOCK_CONTENT
    ALL
}

model Review {
    id String @id @default(uuid())
    title String
    text String
    score Int
    createdAt DateTime @default(now())
    bookId String
    userId String
    user User @relation(fields: [userId], references: [id])
    reviewsLikes ReviewLike[]
    blockedAt DateTime?
}

model ReviewLike {
    id String @id @default(uuid())
    createdAt DateTime @default(now())
    review Review @relation(fields: [reviewId], references: [id])
    reviewId String
    user User @relation(fields: [userId], references: [id])
    userId String

    @@unique([reviewId, userId])
}

model BookLike {
    id String @id @default(uuid())
    createdAt DateTime @default(now())
    book Book @relation(fields: [bookIsbn], references: [isbn])
    bookIsbn String
    user User @relation(fields: [userId], references: [id])
    userId String

    @@unique([bookIsbn, userId])
}

model Bookmark {
    id String @id @default(uuid())
    createdAt DateTime @default(now())
    bookId String
    userId String
    user User @relation(fields: [userId], references: [id])

    @@unique([bookId, userId])
}

model BookRead {
    id String @id @default(uuid())
    createdAt DateTime @default(now())
    bookId String
    userId String
    user User @relation(fields: [userId], references: [id])

    @@unique([bookId, userId])
}

model Library {
    id String @id @default(uuid())
    createdAt DateTime @default(now())
    bookId String
    userId String
    user User @relation(fields: [userId], references: id)

    @@unique([bookId, userId])
}